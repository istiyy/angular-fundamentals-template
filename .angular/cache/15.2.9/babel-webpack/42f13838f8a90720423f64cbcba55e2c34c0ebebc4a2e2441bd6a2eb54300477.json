{"ast":null,"code":"import { RouterModule } from \"@angular/router\";\nimport { NotAuthorizedGuard } from \"./auth/guards/not-authorized.guard\";\nimport { AuthorizedGuard } from \"./auth/guards/authorized.guard\";\nimport { AdminGuard } from \"./user/guards/admin.guard\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport const routes = [{\n  path: \"login\",\n  loadChildren: () => import(\"./shared/shared.module\").then(m => m.SharedModule),\n  canActivate: [NotAuthorizedGuard]\n}, {\n  path: \"registration\",\n  loadChildren: () => import(\"./shared/shared.module\").then(m => m.SharedModule),\n  canActivate: [NotAuthorizedGuard]\n}, {\n  path: \"courses\",\n  loadChildren: () => import(\"./features/courses/courses-list/courses-list.module\").then(m => m.CoursesListModule),\n  canLoad: [AuthorizedGuard]\n}, {\n  path: \"courses/:id\",\n  loadChildren: () => import(\"./features/course-info/course-info.module\").then(m => m.CourseInfoModule),\n  canLoad: [AuthorizedGuard]\n}, {\n  path: \"courses/add\",\n  loadChildren: () => import(\"./shared/shared.module\").then(m => m.SharedModule),\n  canLoad: [AuthorizedGuard],\n  canActivate: [AdminGuard]\n}, {\n  path: \"courses/edit/:id\",\n  loadChildren: () => import(\"./shared/shared.module\").then(m => m.SharedModule),\n  canLoad: [AuthorizedGuard],\n  canActivate: [AdminGuard]\n}, {\n  path: \"\",\n  redirectTo: \"courses\",\n  pathMatch: \"full\"\n}, {\n  path: \"**\",\n  redirectTo: \"courses\",\n  pathMatch: \"full\"\n}];\nexport class AppRoutingModule {}\nAppRoutingModule.ɵfac = function AppRoutingModule_Factory(t) {\n  return new (t || AppRoutingModule)();\n};\nAppRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: AppRoutingModule\n});\nAppRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  imports: [RouterModule.forRoot(routes), RouterModule]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"mappings":"AACA,SAAiBA,YAAY,QAAQ,iBAAiB;AACtD,SAASC,kBAAkB,QAAQ,oCAAoC;AACvE,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,UAAU,QAAQ,2BAA2B;;;AAEtD,OAAO,MAAMC,MAAM,GAAW,CAC5B;EACEC,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE,MAAM,MAAM,CAAC,wBAAwB,CAAC,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,YAAY,CAAC;EAChFC,WAAW,EAAE,CAACT,kBAAkB;CACjC,EACD;EACEI,IAAI,EAAE,cAAc;EACpBC,YAAY,EAAE,MAAM,MAAM,CAAC,wBAAwB,CAAC,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,YAAY,CAAC;EAChFC,WAAW,EAAE,CAACT,kBAAkB;CACjC,EACD;EACEI,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE,MAAM,MAAM,CAAC,qDAAqD,CAAC,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACG,iBAAiB,CAAC;EAClHC,OAAO,EAAE,CAACV,eAAe;CAC1B,EACD;EACEG,IAAI,EAAE,aAAa;EACnBC,YAAY,EAAE,MAAM,MAAM,CAAC,2CAA2C,CAAC,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACK,gBAAgB,CAAC;EACvGD,OAAO,EAAE,CAACV,eAAe;CAC1B,EACD;EACEG,IAAI,EAAE,aAAa;EACnBC,YAAY,EAAE,MAAM,MAAM,CAAC,wBAAwB,CAAC,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,YAAY,CAAC;EAChFG,OAAO,EAAE,CAACV,eAAe,CAAC;EAC1BQ,WAAW,EAAE,CAACP,UAAU;CACzB,EACD;EACEE,IAAI,EAAE,kBAAkB;EACxBC,YAAY,EAAE,MAAM,MAAM,CAAC,wBAAwB,CAAC,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,YAAY,CAAC;EAChFG,OAAO,EAAE,CAACV,eAAe,CAAC;EAC1BQ,WAAW,EAAE,CAACP,UAAU;CACzB,EACD;EACEE,IAAI,EAAE,EAAE;EACRS,UAAU,EAAE,SAAS;EACrBC,SAAS,EAAE;CACZ,EACD;EACEV,IAAI,EAAE,IAAI;EACVS,UAAU,EAAE,SAAS;EACrBC,SAAS,EAAE;CACZ,CACF;AAMD,OAAM,MAAOC,gBAAgB;AAAhBA,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA;AAAgB;AAAhBA,gBAAgB;YAHjBhB,YAAY,CAACiB,OAAO,CAACb,MAAM,CAAC,EAC5BJ,YAAY;AAAA;;2EAEXgB,gBAAgB;IAAAE;IAAAC,UAFjBnB,YAAY;EAAA;AAAA","names":["RouterModule","NotAuthorizedGuard","AuthorizedGuard","AdminGuard","routes","path","loadChildren","then","m","SharedModule","canActivate","CoursesListModule","canLoad","CourseInfoModule","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","exports"],"sourceRoot":"","sources":["C:\\Users\\Isti\\Desktop\\epam-tasks\\angular-fundamentals-template\\src\\app\\app-routing.module.ts"],"sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { NotAuthorizedGuard } from \"./auth/guards/not-authorized.guard\";\r\nimport { AuthorizedGuard } from \"./auth/guards/authorized.guard\";\r\nimport { AdminGuard } from \"./user/guards/admin.guard\";\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: \"login\",\r\n    loadChildren: () => import(\"./shared/shared.module\").then((m) => m.SharedModule),\r\n    canActivate: [NotAuthorizedGuard],\r\n  },\r\n  {\r\n    path: \"registration\",\r\n    loadChildren: () => import(\"./shared/shared.module\").then((m) => m.SharedModule),\r\n    canActivate: [NotAuthorizedGuard],\r\n  },\r\n  {\r\n    path: \"courses\",\r\n    loadChildren: () => import(\"./features/courses/courses-list/courses-list.module\").then((m) => m.CoursesListModule),\r\n    canLoad: [AuthorizedGuard],\r\n  },\r\n  {\r\n    path: \"courses/:id\",\r\n    loadChildren: () => import(\"./features/course-info/course-info.module\").then((m) => m.CourseInfoModule),\r\n    canLoad: [AuthorizedGuard],\r\n  },\r\n  {\r\n    path: \"courses/add\",\r\n    loadChildren: () => import(\"./shared/shared.module\").then((m) => m.SharedModule),\r\n    canLoad: [AuthorizedGuard],\r\n    canActivate: [AdminGuard],\r\n  },\r\n  {\r\n    path: \"courses/edit/:id\",\r\n    loadChildren: () => import(\"./shared/shared.module\").then((m) => m.SharedModule),\r\n    canLoad: [AuthorizedGuard],\r\n    canActivate: [AdminGuard],\r\n  },\r\n  {\r\n    path: \"\",\r\n    redirectTo: \"courses\",\r\n    pathMatch: \"full\",\r\n  },\r\n  {\r\n    path: \"**\",\r\n    redirectTo: \"courses\",\r\n    pathMatch: \"full\",\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}