{"ast":null,"code":"import { BehaviorSubject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./courses.service\";\nexport class CoursesStoreService {\n  constructor(coursesService) {\n    this.coursesService = coursesService;\n    this.coursesSubject = new BehaviorSubject([]);\n    this.loadingSubject = new BehaviorSubject(false);\n    this.courses$ = this.coursesSubject.asObservable();\n    this.loading$ = this.loadingSubject.asObservable();\n  }\n  getAll() {\n    this.loadingSubject.next(true);\n    this.coursesService.getAll().subscribe(courses => {\n      this.coursesSubject.next(courses);\n      this.loadingSubject.next(false);\n    });\n  }\n  createCourse(course) {\n    this.loadingSubject.next(true);\n    this.coursesService.createCourse(course).subscribe(() => {\n      this.getAll();\n    });\n  }\n  getCourse(id) {\n    return this.coursesService.getCourse(id);\n  }\n  editCourse(id, course) {\n    this.loadingSubject.next(true);\n    this.coursesService.editCourse(id, course).subscribe(() => {\n      this.getAll();\n    });\n  }\n  deleteCourse(id) {\n    this.loadingSubject.next(true);\n    this.coursesService.deleteCourse(id).subscribe(() => {\n      this.getAll();\n    });\n  }\n  filterCourses(value) {\n    this.loadingSubject.next(true);\n    this.coursesService.filterCourses({\n      search: [value]\n    }).subscribe(courses => {\n      this.coursesSubject.next(courses);\n      this.loadingSubject.next(false);\n    });\n  }\n  getAllAuthors() {\n    return this.coursesService.getAllAuthors();\n  }\n  createAuthor(name) {\n    this.loadingSubject.next(true);\n    this.coursesService.createAuthor(name).subscribe(() => {\n      this.loadingSubject.next(false);\n    });\n  }\n  getAuthorById(id) {\n    return this.coursesService.getAuthorById(id);\n  }\n  editAuthor(id, name) {\n    this.loadingSubject.next(true);\n    this.coursesService.editAuthor(id, name).subscribe(() => {\n      this.loadingSubject.next(false);\n    });\n  }\n  deleteAuthor(id) {\n    this.loadingSubject.next(true);\n    this.coursesService.deleteAuthor(id).subscribe(() => {\n      this.loadingSubject.next(false);\n    });\n  }\n}\nCoursesStoreService.ɵfac = function CoursesStoreService_Factory(t) {\n  return new (t || CoursesStoreService)(i0.ɵɵinject(i1.CoursesService));\n};\nCoursesStoreService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CoursesStoreService,\n  factory: CoursesStoreService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":"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","names":["BehaviorSubject","CoursesStoreService","constructor","coursesService","coursesSubject","asObservable","loadingSubject","getAll","next","subscribe","courses","createCourse","course","getCourse","id","editCourse","deleteCourse","filterCourses","value","search","getAllAuthors","createAuthor","name","getAuthorById","editAuthor","deleteAuthor","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Isti\\Desktop\\epam-tasks\\angular-fundamentals-template\\src\\app\\services\\courses-store.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject, Observable } from \"rxjs\";\r\nimport { CoursesService } from \"./courses.service\";\r\n\r\ninterface Author {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\ninterface Course {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  creationDate: string;\r\n  duration: number;\r\n  topRated: boolean;\r\n  authors: Author[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CoursesStoreService {\r\n  private coursesSubject = new BehaviorSubject<Course[]>([]);\r\n  private loadingSubject = new BehaviorSubject<boolean>(false);\r\n\r\n  courses$ = this.coursesSubject.asObservable();\r\n  loading$ = this.loadingSubject.asObservable();\r\n\r\n  constructor(private coursesService: CoursesService) {}\r\n\r\n  getAll() {\r\n    this.loadingSubject.next(true);\r\n    this.coursesService.getAll().subscribe((courses) => {\r\n      this.coursesSubject.next(courses);\r\n      this.loadingSubject.next(false);\r\n    });\r\n  }\r\n\r\n  createCourse(course: Course) {\r\n    this.loadingSubject.next(true);\r\n    this.coursesService.createCourse(course).subscribe(() => {\r\n      this.getAll();\r\n    });\r\n  }\r\n\r\n  getCourse(id: string): Observable<Course> {\r\n    return this.coursesService.getCourse(id);\r\n  }\r\n\r\n  editCourse(id: string, course: Course) {\r\n    this.loadingSubject.next(true);\r\n    this.coursesService.editCourse(id, course).subscribe(() => {\r\n      this.getAll();\r\n    });\r\n  }\r\n\r\n  deleteCourse(id: string) {\r\n    this.loadingSubject.next(true);\r\n    this.coursesService.deleteCourse(id).subscribe(() => {\r\n      this.getAll();\r\n    });\r\n  }\r\n\r\n  filterCourses(value: string) {\r\n    this.loadingSubject.next(true);\r\n    this.coursesService.filterCourses({ search: [value] }).subscribe((courses) => {\r\n      this.coursesSubject.next(courses);\r\n      this.loadingSubject.next(false);\r\n    });\r\n  }\r\n\r\n  getAllAuthors(): Observable<Author[]> {\r\n    return this.coursesService.getAllAuthors();\r\n  }\r\n\r\n  createAuthor(name: string) {\r\n    this.loadingSubject.next(true);\r\n    this.coursesService.createAuthor(name).subscribe(() => {\r\n      this.loadingSubject.next(false);\r\n    });\r\n  }\r\n\r\n  getAuthorById(id: string): Observable<Author> {\r\n    return this.coursesService.getAuthorById(id);\r\n  }\r\n\r\n  editAuthor(id: string, name: string) {\r\n    this.loadingSubject.next(true);\r\n    this.coursesService.editAuthor(id, name).subscribe(() => {\r\n      this.loadingSubject.next(false);\r\n    });\r\n  }\r\n\r\n  deleteAuthor(id: string) {\r\n    this.loadingSubject.next(true);\r\n    this.coursesService.deleteAuthor(id).subscribe(() => {\r\n      this.loadingSubject.next(false);\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}