{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class CoursesService {\n  getAll() {\n    return this.http.get(\"/api/courses\");\n  }\n  createCourse(course) {\n    // replace 'any' with the required interface\n    // Add your code here\n  }\n  editCourse(id, course) {\n    // replace 'any' with the required interface\n    // Add your code here\n  }\n  getCourse(id) {\n    // Add your code here\n  }\n  deleteCourse(id) {\n    // Add your code here\n  }\n  filterCourses(value) {\n    // Add your code here\n  }\n  getAllAuthors() {\n    // Add your code here\n  }\n  createAuthor(name) {\n    // Add your code here\n  }\n  getAuthorById(id) {\n    // Add your code here\n  }\n}\nCoursesService.ɵfac = function CoursesService_Factory(t) {\n  return new (t || CoursesService)();\n};\nCoursesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CoursesService,\n  factory: CoursesService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,cAAc;EACzBC,MAAM;IACJ,OAAO,IAAI,CAACC,IAAI,CAACC,GAAG,CAAC,cAAc,CAAC;EACtC;EAEAC,YAAY,CAACC,MAAW;IACtB;IACA;EAAA;EAGFC,UAAU,CAACC,EAAU,EAAEF,MAAW;IAChC;IACA;EAAA;EAGFG,SAAS,CAACD,EAAU;IAClB;EAAA;EAGFE,YAAY,CAACF,EAAU;IACrB;EAAA;EAGFG,aAAa,CAACC,KAAa;IACzB;EAAA;EAGFC,aAAa;IACX;EAAA;EAGFC,YAAY,CAACC,IAAY;IACvB;EAAA;EAGFC,aAAa,CAACR,EAAU;IACtB;EAAA;;AApCSP,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAgB,SAAdhB,cAAc;EAAAiB,YAFb;AAAM","names":["CoursesService","getAll","http","get","createCourse","course","editCourse","id","getCourse","deleteCourse","filterCourses","value","getAllAuthors","createAuthor","name","getAuthorById","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Isti\\Desktop\\epam-tasks\\angular-fundamentals-template\\src\\app\\services\\courses.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CoursesService {\r\n  getAll() {\r\n    return this.http.get(\"/api/courses\");\r\n  }\r\n\r\n  createCourse(course: any) {\r\n    // replace 'any' with the required interface\r\n    // Add your code here\r\n  }\r\n\r\n  editCourse(id: string, course: any) {\r\n    // replace 'any' with the required interface\r\n    // Add your code here\r\n  }\r\n\r\n  getCourse(id: string) {\r\n    // Add your code here\r\n  }\r\n\r\n  deleteCourse(id: string) {\r\n    // Add your code here\r\n  }\r\n\r\n  filterCourses(value: string) {\r\n    // Add your code here\r\n  }\r\n\r\n  getAllAuthors() {\r\n    // Add your code here\r\n  }\r\n\r\n  createAuthor(name: string) {\r\n    // Add your code here\r\n  }\r\n\r\n  getAuthorById(id: string) {\r\n    // Add your code here\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}