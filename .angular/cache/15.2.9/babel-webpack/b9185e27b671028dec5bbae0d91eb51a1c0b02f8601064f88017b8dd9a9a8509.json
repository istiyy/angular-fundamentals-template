{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { NotAuthorizedGuard } from './auth/guards/not-authorized.guard';\nimport { AuthorizedGuard } from './auth/guards/authorized.guard';\nimport { AdminGuard } from './user/guards/admin.guard';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport const routes = [{\n  path: 'login',\n  loadChildren: () => import('./shared/shared.module').then(m => m.SharedModule),\n  canActivate: [NotAuthorizedGuard]\n}, {\n  path: 'registration',\n  loadChildren: () => import('./shared/shared.module').then(m => m.SharedModule),\n  canActivate: [NotAuthorizedGuard]\n}, {\n  path: 'courses',\n  loadChildren: () => import('./features/courses/courses-list/courses-list.module').then(m => m.CoursesListModule),\n  canLoad: [AuthorizedGuard]\n}, {\n  path: 'courses/:id',\n  loadChildren: () => import('./features/course-info/course-info.module').then(m => m.CourseInfoModule),\n  canLoad: [AuthorizedGuard]\n}, {\n  path: 'courses/add',\n  loadChildren: () => import('./shared/shared.module').then(m => m.SharedModule),\n  canLoad: [AuthorizedGuard],\n  canActivate: [AdminGuard]\n}, {\n  path: 'courses/edit/:id',\n  loadChildren: () => import('./shared/shared.module').then(m => m.SharedModule),\n  canLoad: [AuthorizedGuard],\n  canActivate: [AdminGuard]\n}, {\n  path: '',\n  redirectTo: 'courses',\n  pathMatch: 'full'\n}, {\n  path: '**',\n  redirectTo: 'courses',\n  pathMatch: 'full'\n}];\nexport class AppRoutingModule {}\nAppRoutingModule.ɵfac = function AppRoutingModule_Factory(t) {\n  return new (t || AppRoutingModule)();\n};\nAppRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: AppRoutingModule\n});\nAppRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  imports: [RouterModule.forRoot(routes), RouterModule]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"mappings":"AACA,SAAiBA,YAAY,QAAQ,iBAAiB;AACtD,SAASC,kBAAkB,QAAQ,oCAAoC;AACvE,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,UAAU,QAAQ,2BAA2B;;;AAGtD,OAAO,MAAMC,MAAM,GAAW,CAC1B;EACIC,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE,MAAM,MAAM,CAAC,wBAAwB,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,YAAY,CAAC;EAC9EC,WAAW,EAAE,CAACT,kBAAkB;CACnC,EACD;EACII,IAAI,EAAE,cAAc;EACpBC,YAAY,EAAE,MAAM,MAAM,CAAC,wBAAwB,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,YAAY,CAAC;EAC9EC,WAAW,EAAE,CAACT,kBAAkB;CACnC,EACD;EACII,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE,MAAM,MAAM,CAAC,qDAAqD,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACG,iBAAiB,CAAC;EAChHC,OAAO,EAAE,CAACV,eAAe;CAC5B,EACD;EACIG,IAAI,EAAE,aAAa;EACnBC,YAAY,EAAE,MAAM,MAAM,CAAC,2CAA2C,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACK,gBAAgB,CAAC;EACrGD,OAAO,EAAE,CAACV,eAAe;CAC5B,EACD;EACIG,IAAI,EAAE,aAAa;EACnBC,YAAY,EAAE,MAAM,MAAM,CAAC,wBAAwB,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,YAAY,CAAC;EAC9EG,OAAO,EAAE,CAACV,eAAe,CAAC;EAC1BQ,WAAW,EAAE,CAACP,UAAU;CAC3B,EACD;EACIE,IAAI,EAAE,kBAAkB;EACxBC,YAAY,EAAE,MAAM,MAAM,CAAC,wBAAwB,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,YAAY,CAAC;EAC9EG,OAAO,EAAE,CAACV,eAAe,CAAC;EAC1BQ,WAAW,EAAE,CAACP,UAAU;CAC3B,EACD;EACIE,IAAI,EAAE,EAAE;EACRS,UAAU,EAAE,SAAS;EACrBC,SAAS,EAAE;CACd,EACD;EACIV,IAAI,EAAE,IAAI;EACVS,UAAU,EAAE,SAAS;EACrBC,SAAS,EAAE;CACd,CACJ;AAMD,OAAM,MAAOC,gBAAgB;AAAhBA,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA;AAAgB;AAAhBA,gBAAgB;YAHfhB,YAAY,CAACiB,OAAO,CAACb,MAAM,CAAC,EAC5BJ,YAAY;AAAA;;2EAEbgB,gBAAgB;IAAAE;IAAAC,UAFfnB,YAAY;EAAA;AAAA","names":["RouterModule","NotAuthorizedGuard","AuthorizedGuard","AdminGuard","routes","path","loadChildren","then","m","SharedModule","canActivate","CoursesListModule","canLoad","CourseInfoModule","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","exports"],"sourceRoot":"","sources":["C:\\Users\\Isti\\Desktop\\epam-tasks\\angular-fundamentals-template\\src\\app\\app-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NotAuthorizedGuard } from './auth/guards/not-authorized.guard';\nimport { AuthorizedGuard } from './auth/guards/authorized.guard';\nimport { AdminGuard } from './user/guards/admin.guard';\n\n\nexport const routes: Routes = [\n    { \n        path: 'login',\n        loadChildren: () => import('./shared/shared.module').then(m => m.SharedModule),\n        canActivate: [NotAuthorizedGuard]\n    },\n    { \n        path: 'registration',\n        loadChildren: () => import('./shared/shared.module').then(m => m.SharedModule),\n        canActivate: [NotAuthorizedGuard]\n    },\n    {\n        path: 'courses',\n        loadChildren: () => import('./features/courses/courses-list/courses-list.module').then(m => m.CoursesListModule),\n        canLoad: [AuthorizedGuard]\n    },\n    {\n        path: 'courses/:id',\n        loadChildren: () => import('./features/course-info/course-info.module').then(m => m.CourseInfoModule),\n        canLoad: [AuthorizedGuard]\n    },\n    {\n        path: 'courses/add',\n        loadChildren: () => import('./shared/shared.module').then(m => m.SharedModule),\n        canLoad: [AuthorizedGuard],\n        canActivate: [AdminGuard]\n    },\n    {\n        path: 'courses/edit/:id',\n        loadChildren: () => import('./shared/shared.module').then(m => m.SharedModule),\n        canLoad: [AuthorizedGuard],\n        canActivate: [AdminGuard]\n    },\n    {\n        path: '',\n        redirectTo: 'courses',\n        pathMatch: 'full'\n    },\n    {\n        path: '**',\n        redirectTo: 'courses',\n        pathMatch: 'full'\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n  })\nexport class AppRoutingModule {}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}