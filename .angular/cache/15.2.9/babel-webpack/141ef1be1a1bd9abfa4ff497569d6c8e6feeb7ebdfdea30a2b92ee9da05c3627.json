{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport * as CoursesActions from './courses.actions';\nexport const coursesFeatureKey = 'courses';\nexport const initialState = {\n  allCourses: [],\n  course: null,\n  isAllCourseLoading: false,\n  isSingleCourseLoading: false,\n  isSearchState: false,\n  errorMessage: null\n  // Add your code here\n};\n\nexport const coursesReducer = createReducer(initialState, on(CoursesActions.requestAllCourses, state => ({\n  ...state,\n  isAllCourseLoading: true,\n  errorMessage: null\n})), on(CoursesActions.requestAllCoursesSuccess, (state, {\n  courses\n}) => ({\n  ...state,\n  allCourses: courses,\n  isAllCourseLoading: false,\n  errorMessage: null\n})), on(CoursesActions.requestAllCoursesFail, (state, {\n  error\n}) => ({\n  ...state,\n  isAllCourseLoading: true,\n  errorMessage: error\n})), on(CoursesActions.requestSingleCourse, state => ({\n  ...state,\n  isSingleCourseLoading: true,\n  errorMessage: null\n})), on(CoursesActions.requestSingleCourseSuccess, (state, {\n  course\n}) => ({\n  ...state,\n  course: course,\n  isSingleCourseLoading: false,\n  errorMessage: null\n})), on(CoursesActions.requestSingleCourseFail, (state, {\n  error\n}) => ({\n  ...state,\n  isSingleCourseLoading: false,\n  errorMessage: error\n})), on(CoursesActions.requestFilteredCoursesSuccess, (state, {\n  courses\n}) => ({\n  ...state,\n  allCourses: courses // or wherever you want to store the filtered result\n})), on(CoursesActions.requestDeleteCourseSuccess, state => ({\n  ...state,\n  errorMessage: null\n})), on(CoursesActions.requestDeleteCourseFail, (state, {\n  error\n}) => ({\n  ...state,\n  errorMessage: error\n})), on(CoursesActions.requestEditCourseSuccess, (state, {\n  course\n}) => ({\n  ...state,\n  allCourses: state.allCourses.map(c => c.id === course.id ? course : c),\n  errorMessage: null\n})), on(CoursesActions.requestEditCourseFail, (state, {\n  error\n}) => ({\n  ...state,\n  errorMessage: error\n})), on(CoursesActions.requestCreateCourseSuccess, (state, {\n  course\n}) => ({\n  ...state,\n  allCourses: [...state.allCourses, course],\n  errorMessage: null\n})), on(CoursesActions.requestCreateCourseFail, (state, {\n  error\n}) => ({\n  ...state,\n  errorMessage: error\n}))); // Add your code here\nexport const reducer = (state, action) => coursesReducer(state, action);","map":{"version":3,"mappings":"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","names":["createReducer","on","CoursesActions","coursesFeatureKey","initialState","allCourses","course","isAllCourseLoading","isSingleCourseLoading","isSearchState","errorMessage","coursesReducer","requestAllCourses","state","requestAllCoursesSuccess","courses","requestAllCoursesFail","error","requestSingleCourse","requestSingleCourseSuccess","requestSingleCourseFail","requestFilteredCoursesSuccess","requestDeleteCourseSuccess","requestDeleteCourseFail","requestEditCourseSuccess","map","c","id","requestEditCourseFail","requestCreateCourseSuccess","requestCreateCourseFail","reducer","action"],"sourceRoot":"","sources":["C:\\Users\\Isti\\Desktop\\epam-tasks\\angular-fundamentals-template\\src\\app\\store\\courses\\courses.reducer.ts"],"sourcesContent":["import { Action, createReducer, on } from '@ngrx/store';\nimport * as CoursesActions from './courses.actions'\nimport { Course } from '@app/models/course.model';\n\nexport const coursesFeatureKey = 'courses';\n\n// Add your code here\n\nexport interface CoursesState {\n    allCourses: Course[];\n    course: Course | null;\n    isAllCourseLoading: boolean;\n    isSingleCourseLoading: boolean;\n    isSearchState: boolean;\n    errorMessage: Error | null;\n    // Add your code here\n}\n\nexport const initialState: CoursesState = {\n    allCourses: [],\n    course: null,\n    isAllCourseLoading: false,\n    isSingleCourseLoading: false,\n    isSearchState: false,\n    errorMessage: null,\n    // Add your code here\n};\n\nexport const coursesReducer = createReducer(\n    initialState,\n\n    on(CoursesActions.requestAllCourses, (state) => ({\n        ...state,\n        isAllCourseLoading: true,\n        errorMessage: null\n    })),\n    on(CoursesActions.requestAllCoursesSuccess, (state, {courses}) => ({\n        ...state,\n        allCourses: courses,\n        isAllCourseLoading: false,\n        errorMessage: null\n    })),\n    on (CoursesActions.requestAllCoursesFail, (state, {error}) => ({\n        ...state,\n        isAllCourseLoading: true,\n        errorMessage: error,\n    })),\n\n    on(CoursesActions.requestSingleCourse, (state) => ({\n        ...state,\n        isSingleCourseLoading: true,\n        errorMessage: null,\n    })),\n    on(CoursesActions.requestSingleCourseSuccess, (state, {course}) => ({\n        ...state,\n        course: course,\n        isSingleCourseLoading: false,\n        errorMessage: null,\n    \n    })),\n    on(CoursesActions.requestSingleCourseFail, (state, {error}) => ({\n        ...state,\n        isSingleCourseLoading: false,\n        errorMessage: error,\n    })),\n\n    on(CoursesActions.requestFilteredCoursesSuccess, (state, { courses }) => ({\n        ...state,\n        allCourses: courses, // or wherever you want to store the filtered result\n    })),\n\n    on(CoursesActions.requestDeleteCourseSuccess, (state) => ({\n        ...state,\n        errorMessage: null,\n    })),\n    on(CoursesActions.requestDeleteCourseFail, (state, {error}) => ({\n        ...state,\n        errorMessage: error,\n    })),\n\n    on(CoursesActions.requestEditCourseSuccess, (state, { course }) => ({\n        ...state,\n        allCourses: state.allCourses.map(c => c.id === course.id ? course : c),\n        errorMessage: null\n    })),\n    on(CoursesActions.requestEditCourseFail, (state, { error }) => ({\n        ...state,\n        errorMessage: error\n    })),\n\n    on(CoursesActions.requestCreateCourseSuccess, (state, { course }) => ({\n        ...state,\n        allCourses: [...state.allCourses, course],\n        errorMessage: null\n    })),\n    on(CoursesActions.requestCreateCourseFail, (state, { error }) => ({\n        ...state,\n        errorMessage: error\n    }))\n\n); // Add your code here\n\nexport const reducer = (state: CoursesState, action: Action): CoursesState => coursesReducer(state, action);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}