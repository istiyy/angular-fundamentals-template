{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/auth/services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../button/button.component\";\nimport * as i6 from \"@shared/directives/email.directive\";\nconst _c0 = [\"loginForm\"];\nfunction LoginFormComponent_span_12_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Email is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginFormComponent_span_12_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Email is not valid.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginFormComponent_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtemplate(1, LoginFormComponent_span_12_span_1_Template, 2, 0, \"span\", 19);\n    i0.ɵɵtemplate(2, LoginFormComponent_span_12_span_2_Template, 2, 0, \"span\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(11);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r1.errors == null ? null : _r1.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r1.errors == null ? null : _r1.errors[\"invalidEmail\"]);\n  }\n}\nfunction LoginFormComponent_span_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 20);\n    i0.ɵɵtext(1, \"Password is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginFormComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    //Use the names `email` and `password` for form controls.\n    this.email = \"\";\n    this.password = \"\";\n  }\n  onSubmit(form) {\n    if (form.valid) {\n      const user = {\n        email: this.email,\n        password: this.password\n      };\n      this.authService.login(user).subscribe(response => {\n        console.log('Form submitted', response);\n        this.router.navigate(['/courses']);\n      }, error => {\n        console.error('Login failed', error);\n      });\n    } else {\n      console.log('Invalid form');\n      form.form.markAllAsTouched();\n    }\n  }\n}\nLoginFormComponent.ɵfac = function LoginFormComponent_Factory(t) {\n  return new (t || LoginFormComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n};\nLoginFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginFormComponent,\n  selectors: [[\"app-login-form\"]],\n  viewQuery: function LoginFormComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loginForm = _t.first);\n    }\n  },\n  decls: 28,\n  vars: 4,\n  consts: [[1, \"text-align-center\"], [1, \"app-plate\"], [\"loginForm\", \"ngForm\"], [1, \"login-form\"], [1, \"form__control\"], [\"for\", \"email\"], [\"type\", \"text\", \"id\", \"email\", \"name\", \"email\", \"placeholder\", \"Input text\", \"required\", \"\", \"emailValidator\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"emailField\", \"ngModel\"], [\"id\", \"emailErrorMessage\", \"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"password\"], [1, \"password-input-container\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"placeholder\", \"Input text\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"passwordField\", \"ngModel\"], [\"id\", \"passwordErrorMessage\", \"class\", \"text-danger\", 4, \"ngIf\"], [1, \"form__action\", 3, \"click\"], [\"buttonText\", \"Login\"], [1, \"form__text\"], [\"routerLink\", \"/registration\", 1, \"link-strong\"], [\"id\", \"emailErrorMessage\", 1, \"text-danger\"], [4, \"ngIf\"], [\"id\", \"passwordErrorMessage\", 1, \"text-danger\"]],\n  template: function LoginFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r7 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"h2\", 0);\n      i0.ɵɵtext(1, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"form\", null, 2)(5, \"div\", 3)(6, \"div\")(7, \"div\", 4)(8, \"label\", 5);\n      i0.ɵɵtext(9, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 6, 7);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginFormComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(12, LoginFormComponent_span_12_Template, 3, 2, \"span\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 4)(14, \"label\", 9);\n      i0.ɵɵtext(15, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 10)(17, \"input\", 11, 12);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginFormComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(19, LoginFormComponent_span_19_Template, 2, 0, \"span\", 13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"div\")(21, \"div\", 14);\n      i0.ɵɵlistener(\"click\", function LoginFormComponent_Template_div_click_21_listener() {\n        i0.ɵɵrestoreView(_r7);\n        const _r0 = i0.ɵɵreference(4);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelement(22, \"app-button\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 16);\n      i0.ɵɵtext(24, \" If you don't have an account you may \");\n      i0.ɵɵelementStart(25, \"strong\")(26, \"a\", 17);\n      i0.ɵɵtext(27, \"Register\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(4);\n      const _r1 = i0.ɵɵreference(11);\n      const _r3 = i0.ɵɵreference(18);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r0.submitted || _r1.touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", (_r3.errors == null ? null : _r3.errors[\"required\"]) && (_r3.touched || _r0.submitted));\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm, i2.RouterLink, i5.ButtonComponent, i6.EmailValidatorDirective],\n  styles: [\".app-plate[_ngcontent-%COMP%] {\\n  width: 100%;\\n  min-height: 477px;\\n  background-color: #fff;\\n  border: 1px solid #CFCFCF;\\n  border-radius: 4px;\\n  padding: 32px;\\n  display: flex;\\n  justify-content: center;\\n}\\n\\n.text-align-center[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\n.app-error-text[_ngcontent-%COMP%] {\\n  color: #FF0000;\\n  position: absolute;\\n  margin-top: 4px;\\n}\\n\\n.form__control[_ngcontent-%COMP%] {\\n  margin-bottom: 24px;\\n}\\n.form__action[_ngcontent-%COMP%] {\\n  margin-top: 54px;\\n}\\n.form__text[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin-top: 38px;\\n  flex-wrap: wrap;\\n}\\n\\n.separator[_ngcontent-%COMP%] {\\n  width: 100%;\\n  border-bottom: 1px solid #CFCFCF;\\n}\\n\\n.text-danger[_ngcontent-%COMP%] {\\n  color: red;\\n}\\n\\n.link-strong[_ngcontent-%COMP%] {\\n  text-decoration: none;\\n  color: #333E48;\\n}\\n\\n.password-input-container[_ngcontent-%COMP%] {\\n  position: relative;\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.password-input-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  padding-right: 50px;\\n}\\n\\n.toggle-password[_ngcontent-%COMP%] {\\n  position: absolute;\\n  right: 10px;\\n  background: none;\\n  border: none;\\n  cursor: pointer;\\n  outline: none;\\n}\\n\\n.login-form[_ngcontent-%COMP%] {\\n  width: 260px;\\n  margin-top: 36px;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-between;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hhcmVkL3N0eWxlcy9zdHlsZXMuc2NzcyIsIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvbG9naW4tZm9ybS9sb2dpbi1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUlBO0VBQ0ksV0FBQTtFQUNBLGlCQUFBO0VBQ0Esc0JBUFU7RUFRVix5QkFBQTtFQUNBLGtCQUFBO0VBQ0EsYUFBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtBQ0hKOztBRE1BO0VBQ0ksa0JBQUE7QUNISjs7QURNQTtFQUNJLGNBbEJRO0VBbUJSLGtCQUFBO0VBQ0EsZUFBQTtBQ0hKOztBRE9JO0VBQ0ksbUJBQUE7QUNKUjtBRE9JO0VBQ0ksZ0JBQUE7QUNMUjtBRFFJO0VBQ0ksa0JBQUE7RUFDQSxnQkFBQTtFQUNGLGVBQUE7QUNOTjs7QURVQTtFQUNJLFdBQUE7RUFDQSxnQ0FBQTtBQ1BKOztBRFVBO0VBQ0ksVUFBQTtBQ1BKOztBRFVBO0VBQ0kscUJBQUE7RUFDQSxjQUFBO0FDUEo7O0FEV0E7RUFDSSxrQkFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtBQ1JKOztBRFdFO0VBQ0UsbUJBQUE7QUNSSjs7QURXRTtFQUNFLGtCQUFBO0VBQ0EsV0FBQTtFQUNBLGdCQUFBO0VBQ0EsWUFBQTtFQUNBLGVBQUE7RUFDQSxhQUFBO0FDUko7O0FBOURBO0VBQ0UsWUFBQTtFQUNBLGdCQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsOEJBQUE7QUFpRUYiLCJzb3VyY2VzQ29udGVudCI6WyIkY29sb3Itd2hpdGU6ICNmZmY7XG4kY29sb3ItZ3JheTogI0NGQ0ZDRjtcbiRjb2xvci1yZWQ6ICNGRjAwMDA7XG5cbi5hcHAtcGxhdGUge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1pbi1oZWlnaHQ6IDQ3N3B4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci13aGl0ZTtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkY29sb3ItZ3JheTtcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgcGFkZGluZzogMzJweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4udGV4dC1hbGlnbi1jZW50ZXIge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmFwcC1lcnJvci10ZXh0IHtcbiAgICBjb2xvcjogJGNvbG9yLXJlZDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbWFyZ2luLXRvcDogNHB4O1xufVxuXG4uZm9ybSB7XG4gICAgJl9fY29udHJvbCB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDI0cHg7XG4gICAgfVxuXG4gICAgJl9fYWN0aW9uIHtcbiAgICAgICAgbWFyZ2luLXRvcDogNTRweDtcbiAgICB9XG5cbiAgICAmX190ZXh0IHtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBtYXJnaW4tdG9wOiAzOHB4O1xuICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgIH1cbn1cblxuLnNlcGFyYXRvciB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRjb2xvci1ncmF5O1xufVxuXG4udGV4dC1kYW5nZXIge1xuICAgIGNvbG9yOiByZWQ7XG59XG5cbi5saW5rLXN0cm9uZyB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGNvbG9yOiAjMzMzRTQ4O1xufVxuXG5cbi5wYXNzd29yZC1pbnB1dC1jb250YWluZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIH1cbiAgXG4gIC5wYXNzd29yZC1pbnB1dC1jb250YWluZXIgaW5wdXQge1xuICAgIHBhZGRpbmctcmlnaHQ6IDUwcHg7IFxuICB9XG4gIFxuICAudG9nZ2xlLXBhc3N3b3JkIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IDEwcHg7IFxuICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBvdXRsaW5lOiBub25lO1xuICB9IiwiQGltcG9ydCAnc3JjL2FwcC9zaGFyZWQvc3R5bGVzL3N0eWxlcy5zY3NzJztcblxuLmxvZ2luLWZvcm0ge1xuICB3aWR0aDogMjYwcHg7XG4gIG1hcmdpbi10b3A6IDM2cHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;IAUYA,4BAA8C;IAAAA,kCAAkB;IAAAA,iBAAO;;;;;IACvEA,4BAAkD;IAAAA,mCAAmB;IAAAA,iBAAO;;;;;IAF9EA,gCAAmG;IACjGA,8EAAuE;IACvEA,8EAA4E;IAC9EA,iBAAO;;;;;IAFEA,eAAqC;IAArCA,yEAAqC;IACrCA,eAAyC;IAAzCA,6EAAyC;;;;;IAUlDA,gCAAmJ;IAAAA,qCAAqB;IAAAA,iBAAO;;;ACXzL,OAAM,MAAOC,kBAAkB;EAG7BC,YAAsBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;IAC9D;IACA,UAAK,GAAW,EAAE;IAClB,aAAQ,GAAW,EAAE;EAHqD;EAK1EC,QAAQ,CAACC,IAAS;IAChB,IAAIA,IAAI,CAACC,KAAK,EAAE;MACd,MAAMC,IAAI,GAAG;QAAEC,KAAK,EAAE,IAAI,CAACA,KAAK;QAAEC,QAAQ,EAAE,IAAI,CAACA;MAAQ,CAAE;MAC3D,IAAI,CAACP,WAAW,CAACQ,KAAK,CAACH,IAAI,CAAC,CAACI,SAAS,CACpCC,QAAQ,IAAG;QACTC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,QAAQ,CAAC;QACvC,IAAI,CAACT,MAAM,CAACY,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;MACpC,CAAC,EACDC,KAAK,IAAG;QACNH,OAAO,CAACG,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACtC,CAAC,CACF;KACF,MAAM;MACLH,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC3BT,IAAI,CAACA,IAAI,CAACY,gBAAgB,EAAE;;EAEhC;;AAxBWjB,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAkB;EAAAC;IAAA;;;;;;;;;;;;;;MDV/BpB,6BAA8B;MAAAA,qBAAK;MAAAA,iBAAK;MACxCA,8BAAuB;MAKMA,qBAAK;MAAAA,iBAAQ;MAEhCA,oCAAwI;MAA5FA;QAAA;MAAA,EAAmB;MAA/DA,iBAAwI;MACxIA,uEAGO;MACTA,iBAAM;MACNA,+BAA2B;MACHA,yBAAQ;MAAAA,iBAAQ;MAEtCA,gCAAsC;MACiBA;QAAA;MAAA,EAAsB;MAA3EA,iBAAwI;MAG1IA,wEAA+K;MACjLA,iBAAM;MAERA,4BAAK;MACuBA;QAAAA;QAAA;QAAA,OAASA,gCAAmB;MAAA,EAAC;MACrDA,kCAA4C;MAC9CA,iBAAM;MACNA,gCAAwB;MACtBA,uDAAqC;MAAAA,+BAAQ;MAAkDA,yBAAQ;MAAAA,iBAAI;;;;;;MArB/DA,gBAAmB;MAAnBA,mCAAmB;MACbA,eAA+C;MAA/CA,mDAA+C;MAS1CA,eAAsB;MAAtBA,sCAAsB;MAGtEA,eAA4F;MAA5FA,6GAA4F","names":["i0","LoginFormComponent","constructor","authService","router","onSubmit","form","valid","user","email","password","login","subscribe","response","console","log","navigate","error","markAllAsTouched","selectors","viewQuery"],"sourceRoot":"","sources":["C:\\Users\\Isti\\Desktop\\epam-tasks\\angular-fundamentals-template\\src\\app\\shared\\components\\login-form\\login-form.component.html","C:\\Users\\Isti\\Desktop\\epam-tasks\\angular-fundamentals-template\\src\\app\\shared\\components\\login-form\\login-form.component.ts"],"sourcesContent":["<h2 class=\"text-align-center\">Login</h2>\n<div class=\"app-plate\">\n  <form #loginForm=\"ngForm\">\n    <div class=\"login-form\">\n      <div>\n        <div class=\"form__control\">\n          <label for=\"email\">Email</label>\n          <!--Use the name `email` for the form control.-->\n          <input  type=\"text\" id=\"email\" name=\"email\" [(ngModel)]=\"email\" #emailField=\"ngModel\" placeholder=\"Input text\" required emailValidator/>\n          <span id=\"emailErrorMessage\" class=\"text-danger\" *ngIf=\"loginForm.submitted || emailField.touched\">\n            <span *ngIf=\"emailField.errors?.['required']\">Email is required.</span>\n            <span *ngIf=\"emailField.errors?.['invalidEmail']\">Email is not valid.</span>\n          </span>\n        </div>\n        <div class=\"form__control\">\n          <label for=\"password\">Password</label>\n          <!--Use the name `password` for the form control.-->\n          <div class=\"password-input-container\">\n            <input type=\"password\" id=\"password\" name=\"password\" [(ngModel)]=\"password\" #passwordField=\"ngModel\" placeholder=\"Input text\" required/>\n            \n          </div>\n          <span *ngIf=\"(passwordField.errors?.['required'] && (passwordField.touched || loginForm.submitted))\" id=\"passwordErrorMessage\" class=\"text-danger\">Password is required.</span>\n        </div>\n      </div>\n      <div>\n        <div class=\"form__action\" (click)=\"onSubmit(loginForm)\">\n          <app-button buttonText=\"Login\"></app-button>\n        </div>\n        <div class=\"form__text\">\n          If you don't have an account you may <strong><a class=\"link-strong\" routerLink=\"/registration\">Register</a></strong>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n","import { Component, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '@app/auth/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss'],\n})\nexport class LoginFormComponent {\n  @ViewChild(\"loginForm\") public loginForm!: NgForm;\n\n  constructor ( private authService: AuthService, private router: Router ) {}\n  //Use the names `email` and `password` for form controls.\n  email: string = \"\";\n  password: string = \"\";\n\n  onSubmit(form: any) {\n    if (form.valid) {\n      const user = { email: this.email, password: this.password };\n      this.authService.login(user).subscribe(\n        response => {\n          console.log('Form submitted', response);\n          this.router.navigate(['/courses']);\n        },\n        error => {\n          console.error('Login failed', error);\n        }\n      );\n    } else {\n      console.log('Invalid form');\n      form.form.markAllAsTouched();\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}