{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@fortawesome/angular-fontawesome\";\nimport * as i3 from \"../button/button.component\";\nexport class CourseFormComponent {\n  constructor(fb, library) {\n    this.fb = fb;\n    this.library = library;\n    // Initial author list\n    this.availableAuthors = [{\n      id: 1,\n      name: \"Author 1\"\n    }, {\n      id: 2,\n      name: \"Author 2\"\n    }];\n    // Track authors added to the course\n    this.courseAuthors = [];\n    this.library.addIconPacks(fas);\n    this.courseForm = this.fb.group({\n      title: [\"\", [Validators.required, Validators.minLength(2)]],\n      description: [\"\", [Validators.required, Validators.minLength(2)]],\n      author: [\"\", [Validators.pattern(\"^[a-zA-Z0-9 ]*$\")]],\n      authors: this.fb.array([]),\n      duration: [0, [Validators.required, Validators.min(0)]]\n    });\n  }\n  // Getters for form controls\n  get title() {\n    return this.courseForm.get(\"title\");\n  }\n  get description() {\n    return this.courseForm.get(\"description\");\n  }\n  get author() {\n    return this.courseForm.get(\"author\");\n  }\n  get authors() {\n    return this.courseForm.get(\"authors\");\n  }\n  get duration() {\n    return this.courseForm.get(\"duration\");\n  }\n  // Add author to the course\n  addAuthor(author) {\n    this.courseAuthors.push(author);\n    this.availableAuthors = this.availableAuthors.filter(a => a.id !== author.id);\n    this.authors.push(this.fb.control(author));\n  }\n  // Remove author from the course\n  removeAuthor(author) {\n    this.availableAuthors.push(author);\n    this.courseAuthors = this.courseAuthors.filter(a => a.id !== author.id);\n    const index = this.authors.controls.findIndex(control => control.value.id === author.id);\n    this.authors.removeAt(index);\n  }\n  // Create a new author from input\n  createAuthor() {\n    if (this.author?.valid) {\n      const newAuthor = {\n        id: Math.floor(Math.random() * 1000),\n        name: this.author?.value\n      };\n      this.availableAuthors.push(newAuthor);\n      this.author?.reset(); // Clear the input field\n    }\n  }\n  // Check if form control is invalid and touched/submitted\n  isControlInvalid(control) {\n    return !!(control && control.invalid && (control.touched || control.dirty));\n  }\n  onSubmit() {\n    if (this.courseForm.valid) {\n      console.log(\"Form Submitted:\", this.courseForm.value);\n    } else {\n      console.error(\"Form is invalid\");\n    }\n  }\n}\nCourseFormComponent.ɵfac = function CourseFormComponent_Factory(t) {\n  return new (t || CourseFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.FaIconLibrary));\n};\nCourseFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CourseFormComponent,\n  selectors: [[\"app-course-form\"]],\n  decls: 42,\n  vars: 0,\n  consts: [[1, \"app-plate\"], [1, \"course\"], [1, \"form__control\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"placeholder\", \"Input text\"], [\"id\", \"titleErrorMessage\", 1, \"text-danger\"], [\"for\", \"description\"], [\"id\", \"description\", \"name\", \"description\", \"placeholder\", \"Input text\", \"rows\", \"4\", \"cols\", \"5\"], [\"id\", \"descriptionErrorMessage\", 1, \"text-danger\"], [1, \"separator\"], [1, \"course__flex\"], [\"type\", \"text\", \"id\", \"author\", \"placeholder\", \"Input Author Name\"], [\"id\", \"createAuthor\"], [\"id\", \"authorErrorMessage\"], [1, \"course__authors\"], [\"type\", \"number\", \"id\", \"duration\", \"placeholder\", \"Input duration\"], [1, \"course__duration\"], [\"id\", \"durationErrorMessage\", 1, \"text-danger\"], [1, \"form__action\"]],\n  template: function CourseFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Create / Edit Course\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\")(3, \"div\", 0)(4, \"div\", 1)(5, \"h3\");\n      i0.ɵɵtext(6, \"Main Info\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 2)(8, \"label\", 3);\n      i0.ɵɵtext(9, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 4);\n      i0.ɵɵelementStart(11, \"span\", 5);\n      i0.ɵɵtext(12, \"Title is required.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 2)(14, \"label\", 6);\n      i0.ɵɵtext(15, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"textarea\", 7);\n      i0.ɵɵelementStart(17, \"span\", 8);\n      i0.ɵɵtext(18, \"Description is required.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(19, \"div\", 9);\n      i0.ɵɵelementStart(20, \"h3\");\n      i0.ɵɵtext(21, \"Authors\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 2)(23, \"div\", 10);\n      i0.ɵɵelement(24, \"input\", 11)(25, \"app-button\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"span\", 13);\n      i0.ɵɵtext(27, \"New author should contain only latin letters and numbers.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"div\", 14);\n      i0.ɵɵtext(29, \" ::Authors:: \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(30, \"div\", 9);\n      i0.ɵɵelementStart(31, \"h3\");\n      i0.ɵɵtext(32, \"Duration\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"div\", 2)(34, \"div\", 10);\n      i0.ɵɵelement(35, \"input\", 15);\n      i0.ɵɵelementStart(36, \"div\", 16);\n      i0.ɵɵtext(37, \" ::Duration:: \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(38, \"span\", 17);\n      i0.ɵɵtext(39, \"Duration is required.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(40, \"div\", 18);\n      i0.ɵɵelement(41, \"app-button\");\n      i0.ɵɵelementEnd()()()();\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.NgForm, i3.ButtonComponent],\n  styles: [\".app-plate[_ngcontent-%COMP%] {\\n  width: 100%;\\n  min-height: 477px;\\n  background-color: #fff;\\n  border: 1px solid #CFCFCF;\\n  border-radius: 4px;\\n  padding: 32px;\\n  display: flex;\\n  justify-content: center;\\n}\\n\\n.text-align-center[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\n.app-error-text[_ngcontent-%COMP%] {\\n  color: #FF0000;\\n  position: absolute;\\n  margin-top: 4px;\\n}\\n\\n.form__control[_ngcontent-%COMP%] {\\n  margin-bottom: 24px;\\n}\\n.form__action[_ngcontent-%COMP%] {\\n  margin-top: 54px;\\n}\\n.form__text[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin-top: 38px;\\n  flex-wrap: wrap;\\n}\\n\\n.separator[_ngcontent-%COMP%] {\\n  width: 100%;\\n  border-bottom: 1px solid #CFCFCF;\\n}\\n\\n.text-danger[_ngcontent-%COMP%] {\\n  color: red;\\n}\\n\\n.course[_ngcontent-%COMP%] {\\n  min-width: 60vw;\\n}\\n.course__flex[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: baseline;\\n}\\n.course__flex[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  flex: 1;\\n}\\n.course__flex[_ngcontent-%COMP%]   app-button[_ngcontent-%COMP%] {\\n  margin-left: 16px;\\n}\\n.course__flex[_ngcontent-%COMP%]   .course__duration[_ngcontent-%COMP%] {\\n  margin-left: 16px;\\n}\\n.course__authors[_ngcontent-%COMP%] {\\n  margin-top: 8px;\\n  display: flex;\\n}\\n.course__authors-item[_ngcontent-%COMP%] {\\n  margin-right: 10px;\\n}\\n.course__icon[_ngcontent-%COMP%] {\\n  margin-left: 4px;\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hhcmVkL3N0eWxlcy9zdHlsZXMuc2NzcyIsIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvY291cnNlLWZvcm0vY291cnNlLWZvcm0uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUE7RUFDSSxXQUFBO0VBQ0EsaUJBQUE7RUFDQSxzQkFQVTtFQVFWLHlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxhQUFBO0VBQ0EsYUFBQTtFQUNBLHVCQUFBO0FDSEo7O0FETUE7RUFDSSxrQkFBQTtBQ0hKOztBRE1BO0VBQ0ksY0FsQlE7RUFtQlIsa0JBQUE7RUFDQSxlQUFBO0FDSEo7O0FET0k7RUFDSSxtQkFBQTtBQ0pSO0FET0k7RUFDSSxnQkFBQTtBQ0xSO0FEUUk7RUFDSSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0YsZUFBQTtBQ05OOztBRFVBO0VBQ0ksV0FBQTtFQUNBLGdDQUFBO0FDUEo7O0FEVUE7RUFDSSxVQUFBO0FDUEo7O0FBdENBO0VBQ0MsZUFBQTtBQXlDRDtBQXZDRTtFQUNFLGFBQUE7RUFDQSw4QkFBQTtFQUNBLHFCQUFBO0FBeUNKO0FBdkNJO0VBQ0UsT0FBQTtBQXlDTjtBQXRDSTtFQUNFLGlCQUFBO0FBd0NOO0FBckNJO0VBQ0UsaUJBQUE7QUF1Q047QUFuQ0U7RUFDRSxlQUFBO0VBQ0EsYUFBQTtBQXFDSjtBQW5DSTtFQUNFLGtCQUFBO0FBcUNOO0FBakNFO0VBQ0UsZ0JBQUE7RUFDQSxlQUFBO0FBbUNKIiwic291cmNlc0NvbnRlbnQiOlsiJGNvbG9yLXdoaXRlOiAjZmZmO1xyXG4kY29sb3ItZ3JheTogI0NGQ0ZDRjtcclxuJGNvbG9yLXJlZDogI0ZGMDAwMDtcclxuXHJcbi5hcHAtcGxhdGUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtaW4taGVpZ2h0OiA0NzdweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci13aGl0ZTtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICRjb2xvci1ncmF5O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgcGFkZGluZzogMzJweDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG5cclxuLnRleHQtYWxpZ24tY2VudGVyIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLmFwcC1lcnJvci10ZXh0IHtcclxuICAgIGNvbG9yOiAkY29sb3ItcmVkO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbWFyZ2luLXRvcDogNHB4O1xyXG59XHJcblxyXG4uZm9ybSB7XHJcbiAgICAmX19jb250cm9sIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAyNHB4O1xyXG4gICAgfVxyXG5cclxuICAgICZfX2FjdGlvbiB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogNTRweDtcclxuICAgIH1cclxuXHJcbiAgICAmX190ZXh0IHtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMzhweDtcclxuICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgfVxyXG59XHJcblxyXG4uc2VwYXJhdG9yIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRjb2xvci1ncmF5O1xyXG59XHJcblxyXG4udGV4dC1kYW5nZXIge1xyXG4gICAgY29sb3I6IHJlZDtcclxufVxyXG4iLCJAaW1wb3J0ICdzcmMvYXBwL3NoYXJlZC9zdHlsZXMvc3R5bGVzJztcclxuXHJcbi5jb3Vyc2Uge1xyXG4gbWluLXdpZHRoOiA2MHZ3O1xyXG5cclxuICAmX19mbGV4IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICBhbGlnbi1pdGVtczogYmFzZWxpbmU7XHJcblxyXG4gICAgJiBpbnB1dCB7XHJcbiAgICAgIGZsZXg6IDE7XHJcbiAgICB9XHJcblxyXG4gICAgJiBhcHAtYnV0dG9uIHtcclxuICAgICAgbWFyZ2luLWxlZnQ6IDE2cHg7XHJcbiAgICB9XHJcblxyXG4gICAgJiAuY291cnNlX19kdXJhdGlvbiB7XHJcbiAgICAgIG1hcmdpbi1sZWZ0OiAxNnB4O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJl9fYXV0aG9ycyB7XHJcbiAgICBtYXJnaW4tdG9wOiA4cHg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG5cclxuICAgICYtaXRlbSB7XHJcbiAgICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gICZfX2ljb24ge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDRweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICB9XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAA4CA,UAAU,QAAyB,gBAAgB;AAE/F,SAASC,GAAG,QAAQ,mCAAmC;;;;;AAOvD,OAAM,MAAOC,mBAAmB;EAY9BC,YAAoBC,EAAe,EAAUC,OAAsB;IAA/C,OAAE,GAAFD,EAAE;IAAuB,YAAO,GAAPC,OAAO;IATpD;IACA,qBAAgB,GAAmC,CACjD;MAAEC,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAU,CAAE,EAC3B;MAAED,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAU,CAAE,CAC5B;IAED;IACA,kBAAa,GAAmC,EAAE;IAGhD,IAAI,CAACF,OAAO,CAACG,YAAY,CAACP,GAAG,CAAC;IAC9B,IAAI,CAACQ,UAAU,GAAG,IAAI,CAACL,EAAE,CAACM,KAAK,CAAC;MAC9BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACY,QAAQ,EAAEZ,UAAU,CAACa,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC3DC,WAAW,EAAE,CAAC,EAAE,EAAE,CAACd,UAAU,CAACY,QAAQ,EAAEZ,UAAU,CAACa,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MACjEE,MAAM,EAAE,CAAC,EAAE,EAAE,CAACf,UAAU,CAACgB,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC;MACrDC,OAAO,EAAE,IAAI,CAACb,EAAE,CAACc,KAAK,CAAC,EAAE,CAAC;MAC1BC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAACnB,UAAU,CAACY,QAAQ,EAAEZ,UAAU,CAACoB,GAAG,CAAC,CAAC,CAAC,CAAC;KACvD,CAAC;EACJ;EAEA;EACA,IAAIT,KAAK;IACP,OAAO,IAAI,CAACF,UAAU,CAACY,GAAG,CAAC,OAAO,CAAC;EACrC;EAEA,IAAIP,WAAW;IACb,OAAO,IAAI,CAACL,UAAU,CAACY,GAAG,CAAC,aAAa,CAAC;EAC3C;EAEA,IAAIN,MAAM;IACR,OAAO,IAAI,CAACN,UAAU,CAACY,GAAG,CAAC,QAAQ,CAAC;EACtC;EAEA,IAAIJ,OAAO;IACT,OAAO,IAAI,CAACR,UAAU,CAACY,GAAG,CAAC,SAAS,CAAc;EACpD;EAEA,IAAIF,QAAQ;IACV,OAAO,IAAI,CAACV,UAAU,CAACY,GAAG,CAAC,UAAU,CAAC;EACxC;EAEA;EACAC,SAAS,CAACP,MAAW;IACnB,IAAI,CAACQ,aAAa,CAACC,IAAI,CAACT,MAAM,CAAC;IAC/B,IAAI,CAACU,gBAAgB,GAAG,IAAI,CAACA,gBAAgB,CAACC,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACrB,EAAE,KAAKS,MAAM,CAACT,EAAE,CAAC;IAC/E,IAAI,CAACW,OAAO,CAACO,IAAI,CAAC,IAAI,CAACpB,EAAE,CAACwB,OAAO,CAACb,MAAM,CAAC,CAAC;EAC5C;EAEA;EACAc,YAAY,CAACd,MAAW;IACtB,IAAI,CAACU,gBAAgB,CAACD,IAAI,CAACT,MAAM,CAAC;IAClC,IAAI,CAACQ,aAAa,GAAG,IAAI,CAACA,aAAa,CAACG,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACrB,EAAE,KAAKS,MAAM,CAACT,EAAE,CAAC;IACzE,MAAMwB,KAAK,GAAG,IAAI,CAACb,OAAO,CAACc,QAAQ,CAACC,SAAS,CAAEJ,OAAO,IAAKA,OAAO,CAACK,KAAK,CAAC3B,EAAE,KAAKS,MAAM,CAACT,EAAE,CAAC;IAC1F,IAAI,CAACW,OAAO,CAACiB,QAAQ,CAACJ,KAAK,CAAC;EAC9B;EAEA;EACAK,YAAY;IACV,IAAI,IAAI,CAACpB,MAAM,EAAEqB,KAAK,EAAE;MACtB,MAAMC,SAAS,GAAG;QAChB/B,EAAE,EAAEgC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,IAAI,CAAC;QACpCjC,IAAI,EAAE,IAAI,CAACQ,MAAM,EAAEkB;OACpB;MACD,IAAI,CAACR,gBAAgB,CAACD,IAAI,CAACa,SAAS,CAAC;MACrC,IAAI,CAACtB,MAAM,EAAE0B,KAAK,EAAE,CAAC,CAAC;;EAE1B;EAEA;EACAC,gBAAgB,CAACd,OAA+B;IAC9C,OAAO,CAAC,EAAEA,OAAO,IAAIA,OAAO,CAACe,OAAO,KAAKf,OAAO,CAACgB,OAAO,IAAIhB,OAAO,CAACiB,KAAK,CAAC,CAAC;EAC7E;EAEAC,QAAQ;IACN,IAAI,IAAI,CAACrC,UAAU,CAAC2B,KAAK,EAAE;MACzBW,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAACvC,UAAU,CAACwB,KAAK,CAAC;KACtD,MAAM;MACLc,OAAO,CAACE,KAAK,CAAC,iBAAiB,CAAC;;EAEpC;;AAlFW/C,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAgD;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCThCC,0BAAI;MAAAA,oCAAoB;MAAAA,iBAAK;MAC7BA,4BAAM;MAGIA,yBAAS;MAAAA,iBAAK;MAClBA,8BAA2B;MACNA,qBAAK;MAAAA,iBAAQ;MAEhCA,4BAAwD;MACxDA,gCAAiD;MAAAA,mCAAkB;MAAAA,iBAAO;MAE5EA,+BAA2B;MACAA,4BAAW;MAAAA,iBAAQ;MAE5CA,+BAMY;MACZA,gCAAuD;MAAAA,yCAAwB;MAAAA,iBAAO;MAExFA,0BAA6B;MAC7BA,2BAAI;MAAAA,wBAAO;MAAAA,iBAAK;MAChBA,+BAA2B;MAGvBA,6BAAgE;MAElEA,iBAAM;MACNA,iCAA8B;MAAAA,0EAAyD;MAAAA,iBAAO;MAC9FA,gCAA6B;MAE3BA,8BACF;MAAAA,iBAAM;MAERA,0BAA6B;MAC7BA,2BAAI;MAAAA,yBAAQ;MAAAA,iBAAK;MACjBA,+BAA2B;MAGvBA,6BAAiE;MACjEA,gCAA8B;MAC5BA,+BACF;MAAAA,iBAAM;MAERA,iCAAoD;MAAAA,sCAAqB;MAAAA,iBAAO;MAElFA,gCAA0B;MACxBA,8BAAyB;MAC3BA,iBAAM","names":["Validators","fas","CourseFormComponent","constructor","fb","library","id","name","addIconPacks","courseForm","group","title","required","minLength","description","author","pattern","authors","array","duration","min","get","addAuthor","courseAuthors","push","availableAuthors","filter","a","control","removeAuthor","index","controls","findIndex","value","removeAt","createAuthor","valid","newAuthor","Math","floor","random","reset","isControlInvalid","invalid","touched","dirty","onSubmit","console","log","error","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Isti\\Desktop\\epam-tasks\\angular-fundamentals-template\\src\\app\\shared\\components\\course-form\\course-form.component.ts","C:\\Users\\Isti\\Desktop\\epam-tasks\\angular-fundamentals-template\\src\\app\\shared\\components\\course-form\\course-form.component.html"],"sourcesContent":["import { Component } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, FormArray, Validators, AbstractControl } from \"@angular/forms\";\r\nimport { FaIconLibrary } from \"@fortawesome/angular-fontawesome\";\r\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n@Component({\r\n  selector: \"app-course-form\",\r\n  templateUrl: \"./course-form.component.html\",\r\n  styleUrls: [\"./course-form.component.scss\"],\r\n})\r\nexport class CourseFormComponent {\r\n  courseForm: FormGroup;\r\n\r\n  // Initial author list\r\n  availableAuthors: { id: number; name: string }[] = [\r\n    { id: 1, name: \"Author 1\" },\r\n    { id: 2, name: \"Author 2\" },\r\n  ];\r\n\r\n  // Track authors added to the course\r\n  courseAuthors: { id: number; name: string }[] = [];\r\n\r\n  constructor(private fb: FormBuilder, private library: FaIconLibrary) {\r\n    this.library.addIconPacks(fas);\r\n    this.courseForm = this.fb.group({\r\n      title: [\"\", [Validators.required, Validators.minLength(2)]],\r\n      description: [\"\", [Validators.required, Validators.minLength(2)]],\r\n      author: [\"\", [Validators.pattern(\"^[a-zA-Z0-9 ]*$\")]], // Validation for Latin letters/numbers\r\n      authors: this.fb.array([]), // Will use FormArray to handle added authors\r\n      duration: [0, [Validators.required, Validators.min(0)]],\r\n    });\r\n  }\r\n\r\n  // Getters for form controls\r\n  get title() {\r\n    return this.courseForm.get(\"title\");\r\n  }\r\n\r\n  get description() {\r\n    return this.courseForm.get(\"description\");\r\n  }\r\n\r\n  get author() {\r\n    return this.courseForm.get(\"author\");\r\n  }\r\n\r\n  get authors() {\r\n    return this.courseForm.get(\"authors\") as FormArray;\r\n  }\r\n\r\n  get duration() {\r\n    return this.courseForm.get(\"duration\");\r\n  }\r\n\r\n  // Add author to the course\r\n  addAuthor(author: any) {\r\n    this.courseAuthors.push(author);\r\n    this.availableAuthors = this.availableAuthors.filter((a) => a.id !== author.id);\r\n    this.authors.push(this.fb.control(author));\r\n  }\r\n\r\n  // Remove author from the course\r\n  removeAuthor(author: any) {\r\n    this.availableAuthors.push(author);\r\n    this.courseAuthors = this.courseAuthors.filter((a) => a.id !== author.id);\r\n    const index = this.authors.controls.findIndex((control) => control.value.id === author.id);\r\n    this.authors.removeAt(index);\r\n  }\r\n\r\n  // Create a new author from input\r\n  createAuthor() {\r\n    if (this.author?.valid) {\r\n      const newAuthor = {\r\n        id: Math.floor(Math.random() * 1000), // Generate a random ID\r\n        name: this.author?.value,\r\n      };\r\n      this.availableAuthors.push(newAuthor);\r\n      this.author?.reset(); // Clear the input field\r\n    }\r\n  }\r\n\r\n  // Check if form control is invalid and touched/submitted\r\n  isControlInvalid(control: AbstractControl | null): boolean {\r\n    return !!(control && control.invalid && (control.touched || control.dirty));\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.courseForm.valid) {\r\n      console.log(\"Form Submitted:\", this.courseForm.value);\r\n    } else {\r\n      console.error(\"Form is invalid\");\r\n    }\r\n  }\r\n}\r\n","<!-- Replace ::text:: with your code -->\r\n<h2>Create / Edit Course</h2>\r\n<form>\r\n  <div class=\"app-plate\">\r\n    <div class=\"course\">\r\n      <h3>Main Info</h3>\r\n      <div class=\"form__control\">\r\n        <label for=\"title\">Title</label>\r\n        <!--Use the name `title` for the form control.-->\r\n        <input type=\"text\" id=\"title\" placeholder=\"Input text\"/>\r\n        <span id=\"titleErrorMessage\" class=\"text-danger\">Title is required.</span>\r\n      </div>\r\n      <div class=\"form__control\">\r\n        <label for=\"description\">Description</label>\r\n        <!--Use the name `description` for the form control.-->\r\n        <textarea\r\n          id=\"description\"\r\n          name=\"description\"\r\n          placeholder=\"Input text\"\r\n          rows=\"4\"\r\n          cols=\"5\"\r\n        ></textarea>\r\n        <span id=\"descriptionErrorMessage\" class=\"text-danger\">Description is required.</span>\r\n      </div>\r\n      <div class=\"separator\"></div>\r\n      <h3>Authors</h3>\r\n      <div class=\"form__control\">\r\n        <div class=\"course__flex\">\r\n          <!--Use the name `author` for the form control.-->\r\n          <input type=\"text\" id=\"author\" placeholder=\"Input Author Name\"/>\r\n          <app-button id=\"createAuthor\"></app-button>\r\n        </div>\r\n        <span id=\"authorErrorMessage\">New author should contain only latin letters and numbers.</span>\r\n        <div class=\"course__authors\">\r\n          <!--Use the name `authors` for the form array.-->\r\n          ::Authors::\r\n        </div>\r\n      </div>\r\n      <div class=\"separator\"></div>\r\n      <h3>Duration</h3>\r\n      <div class=\"form__control\">\r\n        <div class=\"course__flex\">\r\n          <!--Use the name `duration` for the form array.-->\r\n          <input type=\"number\" id=\"duration\" placeholder=\"Input duration\"/>\r\n          <div class=\"course__duration\">\r\n            ::Duration::\r\n          </div>\r\n        </div>\r\n        <span id=\"durationErrorMessage\" class=\"text-danger\">Duration is required.</span>\r\n      </div>\r\n      <div class=\"form__action\">\r\n        <app-button></app-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}