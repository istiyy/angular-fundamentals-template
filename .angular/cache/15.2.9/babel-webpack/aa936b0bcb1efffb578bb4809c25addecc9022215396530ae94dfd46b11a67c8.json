{"ast":null,"code":"import { NG_VALIDATORS } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nexport class EmailValidatorDirective {\n  validate(control) {\n    const emailRegexp = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n    const valid = emailRegexp.test(control.value);\n    return valid ? null : {\n      invalidEmail: true\n    };\n  }\n}\nEmailValidatorDirective.ɵfac = function EmailValidatorDirective_Factory(t) {\n  return new (t || EmailValidatorDirective)();\n};\nEmailValidatorDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: EmailValidatorDirective,\n  selectors: [[\"\", \"emailValidator\", \"\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALIDATORS,\n    useExisting: EmailValidatorDirective,\n    multi: true\n  }])]\n});","map":{"version":3,"mappings":"AACA,SAASA,aAAa,QAAQ,gBAAgB;;AAa9C,OAAM,MAAOC,uBAAuB;EAClCC,QAAQ,CAACC,OAAwB;IAC/B,MAAMC,WAAW,GAAG,mDAAmD;IACvE,MAAMC,KAAK,GAAGD,WAAW,CAACE,IAAI,CAACH,OAAO,CAACI,KAAK,CAAC;IAC7C,OAAOF,KAAK,GAAG,IAAI,GAAG;MAAEG,YAAY,EAAE;IAAI,CAAE;EAC9C;;AALWP,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAQ;EAAAC,iCARvB,CACT;IACEC,OAAO,EAAEX,aAAa;IACtBY,WAAW,EAAEX,uBAAuB;IACpCY,KAAK,EAAE;GACR,CACF;AAAA","names":["NG_VALIDATORS","EmailValidatorDirective","validate","control","emailRegexp","valid","test","value","invalidEmail","selectors","features","provide","useExisting","multi"],"sourceRoot":"","sources":["C:\\Users\\Isti\\Desktop\\epam-tasks\\angular-fundamentals-template\\src\\app\\shared\\directives\\email.directive.ts"],"sourcesContent":["import { Directive } from \"@angular/core\";\r\nimport { NG_VALIDATORS } from \"@angular/forms\";\r\nimport { AbstractControl, ValidationErrors, Validator } from \"@angular/forms\";\r\n\r\n@Directive({\r\n  selector: \"[emailValidator]\",\r\n  providers: [\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: EmailValidatorDirective,\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class EmailValidatorDirective implements Validator {\r\n  validate(control: AbstractControl): ValidationErrors | null {\r\n    const emailRegexp = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\r\n    const valid = emailRegexp.test(control.value);\r\n    return valid ? null : { invalidEmail: true };\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}